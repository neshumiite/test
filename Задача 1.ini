public class GameScore {

    public static void main(String[] args) {
        System.out.println(minimalPointsToFinish(10, 15, 25)); // Ответ 10
        System.out.println(minimalPointsToFinish(8, 8, 15));   // Ответ 7
        System.out.println(minimalPointsToFinish(31, 30, 28));  // Ответ 1
    }

    public static int minimalPointsToFinish(int X, int Y, int Z) {
        int neededPointsForX = Z - X;
        int neededPointsForY = Z - Y;

        if (neededPointsForX <= 0 && neededPointsForY <= 0) {
            return 0; 
        }

        if (X >= Z) {
            return Math.max(0, 2 - (X - Y)); 
        } else if (Y >= Z) {
            return Math.max(0, 2 - (Y - X)); 
        }

        int minPoints = Math.min(neededPointsForX, neededPointsForY);

        if (minPoints == neededPointsForX && (Y + minPoints < X + 2)) {
            return Y + minPoints - (X + 2);
        } else if (minPoints == neededPointsForY && (X + minPoints < Y + 2)) {
            return X + minPoints - (Y + 2);
        }

        return minPoints; 

    }
}
// minimalPointsToFinish — функция которая принимает текущий счет двух команд и пороговое значение Z.
Сначала мы вычисляем, сколько очков нужно каждой команде до победы. Затем проверяем, достигла ли уже кто-то из команд Z очков. Если да, то нужно учитывать разницу в счете.
В конце, исходя из текущего счета, функция возвращает минимальное количество очков, необходимых для завершения игры с учетом требований по разнице.:)